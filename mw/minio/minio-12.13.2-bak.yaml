---
# Source: minio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-cluster
  namespace: "default"
  labels:
    app.kubernetes.io/instance: minio-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2023.12.23
    helm.sh/chart: minio-12.13.2
automountServiceAccountToken: true
secrets:
  - name: minio-cluster
---
# Source: minio/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: minio-cluster
  namespace: "default"
  labels:
    app.kubernetes.io/instance: minio-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2023.12.23
    helm.sh/chart: minio-12.13.2
type: Opaque
data:
  root-user: "YWRtaW4="
  root-password: "YWRtaW4xMjM="
---
# Source: minio/templates/distributed/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: minio-cluster-headless
  namespace: "default"
  labels:
    app.kubernetes.io/instance: minio-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2023.12.23
    helm.sh/chart: minio-12.13.2
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: minio-api
      port: 9000
      targetPort: minio-api
    - name: minio-console
      port: 9001
      targetPort: minio-console
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: minio-cluster
    app.kubernetes.io/name: minio
---
# Source: minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: minio-cluster
  namespace: "default"
  labels:
    app.kubernetes.io/instance: minio-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2023.12.23
    helm.sh/chart: minio-12.13.2
spec:
  type: ClusterIP
  ports:
    - name: minio-api
      port: 9000
      targetPort: minio-api
      nodePort: null
    - name: minio-console
      port: 9001
      targetPort: minio-console
      nodePort: null
  selector:
    app.kubernetes.io/instance: minio-cluster
    app.kubernetes.io/name: minio
---
# Source: minio/templates/distributed/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio-cluster
  namespace: "default"
  labels:
    app.kubernetes.io/instance: minio-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2023.12.23
    helm.sh/chart: minio-12.13.2
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: minio-cluster
      app.kubernetes.io/name: minio
  serviceName: minio-cluster-headless
  replicas: 4
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: minio-cluster
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: minio
        app.kubernetes.io/version: 2023.12.23
        helm.sh/chart: minio-12.13.2
      annotations:
        checksum/credentials-secret: 4473c82e32f9ad8bc7555ef8c8a11d1df4631d65ef990ba5a13976bf68e5ad73
    spec:
      
      serviceAccountName: minio-cluster
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: minio-cluster
                    app.kubernetes.io/name: minio
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: minio
          image: docker.io/bitnami/minio:2023.12.23-debian-11-r3
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MINIO_DISTRIBUTED_MODE_ENABLED
              value: "yes"
            - name: MINIO_DISTRIBUTED_NODES
              value: "minio-cluster-{0...3}.minio-cluster-headless.default.svc.cluster.local:9000/bitnami/minio/data-{0...1}"
            - name: MINIO_SCHEME
              value: "http"
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-cluster
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-cluster
                  key: root-password
            - name: MINIO_SKIP_CLIENT
              value: "yes"
            - name: MINIO_BROWSER
              value: "on"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
            - name: MINIO_PROMETHEUS_URL
              value: http://prometheus-operated.pth:9090
          envFrom:
          ports:
            - name: minio-api
              containerPort: 9000
              protocol: TCP
            - name: minio-console
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: minio-api
              scheme: "HTTP"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: minio-api
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: data-0
              mountPath: /bitnami/minio/data-0
            - name: data-1
              mountPath: /bitnami/minio/data-1
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: data-0
        labels:
          app.kubernetes.io/instance: minio-cluster
          app.kubernetes.io/name: minio
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        
    - metadata:
        name: data-1
        labels:
          app.kubernetes.io/instance: minio-cluster
          app.kubernetes.io/name: minio
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: minio/templates/api-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-cluster-api
  namespace: "default"
  labels:
    app.kubernetes.io/instance: minio-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2023.12.23
    helm.sh/chart: minio-12.13.2
  annotations:
    {}
spec:
  ingressClassName: "public"
  rules:
    - host: api.minio.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: minio-cluster
                port:
                  name: minio-api
---
# Source: minio/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-cluster
  namespace: "default"
  labels:
    app.kubernetes.io/instance: minio-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2023.12.23
    helm.sh/chart: minio-12.13.2
  annotations:
    {}
spec:
  ingressClassName: "public"
  rules:
    - host: console.minio.local
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: minio-cluster
                port:
                  name: minio-console
---
# Source: minio/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: minio-cluster
  namespace: "pth"
  labels:
    app.kubernetes.io/instance: minio-cluster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2023.12.23
    helm.sh/chart: minio-12.13.2
    prometheus.name: prometheus-cluster
spec:
  endpoints:
    - port: minio-api
      path: /minio/v2/metrics/cluster
      interval: 30s
    - port: minio-api
      path: /minio/v2/metrics/node
      interval: 30s
  namespaceSelector:
    matchNames:
      - "default"
  selector:
    matchLabels:
      app.kubernetes.io/instance: minio-cluster
      app.kubernetes.io/name: minio
