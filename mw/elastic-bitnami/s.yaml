apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.12.0
    helm.sh/chart: elasticsearch-19.17.0
  name: elasticsearch-master
  namespace: mw
---
apiVersion: v1
data:
  elasticsearch-password: RXMxMjM0NTY=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.12.0
    helm.sh/chart: elasticsearch-19.17.0
  name: elasticsearch
  namespace: mw
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.12.0
    helm.sh/chart: elasticsearch-19.17.0
  name: elasticsearch
  namespace: mw
spec:
  ports:
  - name: tcp-rest-api
    nodePort: null
    port: 9200
    targetPort: rest-api
  - name: tcp-transport
    nodePort: null
    port: 9300
  selector:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/name: elasticsearch
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.12.0
    helm.sh/chart: elasticsearch-19.17.0
  name: elasticsearch-master-hl
  namespace: mw
spec:
  clusterIP: None
  ports:
  - name: tcp-rest-api
    port: 9200
    targetPort: rest-api
  - name: tcp-transport
    port: 9300
    targetPort: transport
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/name: elasticsearch
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: master
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/version: 8.12.0
    helm.sh/chart: elasticsearch-19.17.0
  name: elasticsearch-master
  namespace: mw
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: elasticsearch
      app.kubernetes.io/name: elasticsearch
  serviceName: elasticsearch-master-hl
  template:
    metadata:
      annotations: null
      labels:
        app: master
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: elasticsearch
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/version: 8.12.0
        helm.sh/chart: elasticsearch-19.17.0
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity: null
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ELASTICSEARCH_IS_DEDICATED_NODE
          value: "no"
        - name: ELASTICSEARCH_NODE_ROLES
          value: master
        - name: ELASTICSEARCH_TRANSPORT_PORT_NUMBER
          value: "9300"
        - name: ELASTICSEARCH_HTTP_PORT_NUMBER
          value: "9200"
        - name: ELASTICSEARCH_CLUSTER_NAME
          value: elastic
        - name: ELASTICSEARCH_HEAP_SIZE
          value: 128m
        - name: ELASTICSEARCH_ENABLE_SECURITY
          value: "true"
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: elasticsearch-password
              name: elasticsearch
        - name: ELASTICSEARCH_ENABLE_FIPS_MODE
          value: "false"
        - name: ELASTICSEARCH_TLS_VERIFICATION_MODE
          value: full
        - name: ELASTICSEARCH_ENABLE_REST_TLS
          value: "true"
        - name: ELASTICSEARCH_TLS_USE_PEM
          value: "true"
        image: docker.io/bitnami/elasticsearch:8.12.0-debian-11-r1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          initialDelaySeconds: 180
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: rest-api
          timeoutSeconds: 5
        name: elasticsearch
        ports:
        - containerPort: 9200
          name: rest-api
        - containerPort: 9300
          name: transport
        readinessProbe:
          exec:
            command:
            - /opt/bitnami/scripts/elasticsearch/healthcheck.sh
          failureThreshold: 5
          initialDelaySeconds: 90
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /bitnami/elasticsearch/data
          name: data
        - mountPath: /opt/bitnami/elasticsearch/config/certs
          name: elasticsearch-certificates
          readOnly: true
      initContainers:
      - command:
        - /bin/bash
        - -ec
        - |
          CURRENT=`sysctl -n vm.max_map_count`;
          DESIRED="262144";
          if [ "$DESIRED" -gt "$CURRENT" ]; then
              sysctl -w vm.max_map_count=262144;
          fi;
          CURRENT=`sysctl -n fs.file-max`;
          DESIRED="65536";
          if [ "$DESIRED" -gt "$CURRENT" ]; then
              sysctl -w fs.file-max=65536;
          fi;
        image: docker.io/bitnami/os-shell:11-debian-11-r94
        imagePullPolicy: IfNotPresent
        name: sysctl
        resources:
          limits: {}
          requests: {}
        securityContext:
          privileged: true
          runAsUser: 0
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: elasticsearch-master
      volumes:
      - name: elasticsearch-certificates
        secret:
          defaultMode: 256
          secretName: elasticsearch-master-crt
      - emptyDir: {}
        name: data
  updateStrategy:
    type: RollingUpdate
