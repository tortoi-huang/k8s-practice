---
# Source: vault/templates/csi-provider/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: vault-csi-provider
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: csi-provider
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault
      app.kubernetes.io/part-of: vault
      app.kubernetes.io/component: csi-provider
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
---
# Source: vault/templates/csi-provider/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-csi-provider
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.4.1
    helm.sh/chart: vault-0.10.2
automountServiceAccountToken: false
---
# Source: vault/templates/injector/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-injector
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: vault-0.10.2
automountServiceAccountToken: false
---
# Source: vault/templates/server/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-server
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
automountServiceAccountToken: false
---
# Source: vault/templates/server/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-server
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
data:
  config.hcl: |
    disable_mlock = true
    cluster_name = "vault-test1"
    ui = true
    listener "tcp" {
      tls_disable = 1
      address = "[::]:8200"
      cluster_address = "[::]:8201"
    }
    storage "raft" {
      path = "/bitnami/vault/data"
    }
    
    service_registration "kubernetes" {}
---
# Source: vault/templates/injector/clusterroles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-mw-injector
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: injector
rules:
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    verbs:
      - "get"
      - "list"
      - "watch"
      - "patch"
---
# Source: vault/templates/injector/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-mw-injector
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-mw-injector
subjects:
  - kind: ServiceAccount
    name: vault-injector
    namespace: "mw"
---
# Source: vault/templates/server/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-mw-server
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vault-server
    namespace: "mw"
---
# Source: vault/templates/injector/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-mw-injector-leader-election
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: injector
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
# Source: vault/templates/server/roles.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-server-leader-election
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
# Source: vault/templates/server/roles.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-server-discovery
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "watch", "list", "update", "patch"]
---
# Source: vault/templates/injector/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-mw-injector-leader-election
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-mw-injector-leader-election
subjects:
  - kind: ServiceAccount
    name: vault-injector
    namespace: "mw"
---
# Source: vault/templates/server/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-server-leader-election
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
  namespace: "mw"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-server-leader-election
subjects:
  - kind: ServiceAccount
    name: vault-server
    namespace: "mw"
---
# Source: vault/templates/server/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-server-discovery
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
  namespace: "mw"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-server-discovery
subjects:
  - kind: ServiceAccount
    name: vault-server
    namespace: "mw"
---
# Source: vault/templates/injector/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vault-injector
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: injector
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: https
      port: 443
      protocol: TCP
      nodePort: null
      targetPort: https
  selector:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: injector
---
# Source: vault/templates/server/active-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vault-server-active
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 8200
      protocol: TCP
      nodePort: null
      targetPort: http
    - name: https-internal
      port: 8201
      protocol: TCP
      nodePort: null
      targetPort: https-internal
  selector:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: vault
    vault-active: "true"
---
# Source: vault/templates/server/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: vault-server-headless
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 8200
      targetPort: http
    - name: https-internal
      port: 8201
      targetPort: https-internal
  selector:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
---
# Source: vault/templates/server/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vault-server
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 8200
      protocol: TCP
      nodePort: null
      targetPort: http
    - name: https-internal
      port: 8201
      protocol: TCP
      nodePort: null
      targetPort: https-internal
  selector:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
---
# Source: vault/templates/injector/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-injector
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: injector
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault
      app.kubernetes.io/part-of: vault
      app.kubernetes.io/component: injector
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: vault
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: vault
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: vault-0.10.2
        app.kubernetes.io/part-of: vault
        app.kubernetes.io/component: injector
    spec:
      serviceAccountName: vault-injector
      
      automountServiceAccountToken: true
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: vault
                    app.kubernetes.io/name: vault
                    app.kubernetes.io/component: injector
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      containers:
        - name: sidecar-injector
          image: docker.io/bitnami/vault-k8s:1.3.1-debian-12-r15
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: RuntimeDefault
          args:
            - agent-inject
            - 2>&1
          env:
            - name: AGENT_INJECT_LISTEN
              value: :8080
            - name: AGENT_INJECT_VAULT_ADDR
              value: http://vault-server:8200
            - name: AGENT_INJECT_VAULT_AUTH_PATH
              value: auth/kubernetes
            - name: AGENT_INJECT_VAULT_IMAGE
              value: "docker.io/bitnami/vault:1.15.5-debian-12-r7"
            - name: AGENT_INJECT_TLS_AUTO
              value: "vault-mw-injector"
            - name: AGENT_INJECT_TLS_AUTO_HOSTS
              value: vault-injector,vault-injector.mw,vault-injector.mw.svc
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          envFrom:
          ports:
            - name: https
              containerPort: 8080
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /health/ready
              port: https
              scheme: HTTPS
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /health/ready
              port: https
              scheme: HTTPS
          volumeMounts:
      volumes:
---
# Source: vault/templates/server/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault-server
  namespace: "mw"
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.15.5
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: server
spec:
  replicas: 3
  serviceName: vault-server-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault
      app.kubernetes.io/part-of: vault
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: vault
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: vault
        app.kubernetes.io/version: 1.15.5
        helm.sh/chart: vault-0.10.2
        app.kubernetes.io/part-of: vault
        app.kubernetes.io/component: server
    spec:
      serviceAccountName: vault-server
      
      automountServiceAccountToken: true
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: vault
                    app.kubernetes.io/name: vault
                    app.kubernetes.io/component: server
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
      containers:
        - name: server
          image: docker.io/bitnami/vault:1.15.5-debian-12-r7
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: RuntimeDefault
          args:
            - server
            - -config=/bitnami/vault/config/config.hcl
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: VAULT_K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: VAULT_ADDR
              value: "http://127.0.0.1:8200"
            - name: VAULT_API_ADDR
              value: "http://$(POD_IP):8200"
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_CLUSTER_ADDR
              value: "https://$(HOSTNAME).vault-server-headless:8201"
            - name: HOME
              value: "/bitnami/vault/home"
          envFrom:
          ports:
            - name: http
              containerPort: 8200
            - name: https-internal
              containerPort: 8201
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - vault
                - status
                - -tls-skip-verify
          lifecycle:
            # From upstream Vault helm chart:
            # Vault container doesn't receive SIGTERM from Kubernetes
            # and after the grace period ends, Kube sends SIGKILL.  This
            # causes issues with graceful shutdowns such as deregistering itself
            # from Consul (zombie services).
            preStop:
              exec:
                command: [
                  "/bin/sh", "-ec",
                  # Adding a sleep here to give the pod eviction a
                  # chance to propagate, so requests will not be made
                  # to this pod while it's terminating
                  "sleep 5 && kill -SIGTERM $(pidof vault)",
                  ]
          volumeMounts:
            - name: data
              mountPath: /bitnami/vault/data
            - name: config
              mountPath: /bitnami/vault/config
            - name: home
              mountPath: /bitnami/vault/home
      volumes:
        - name: config
          configMap:
            name: vault-server
        - name: home
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
---
# Source: vault/templates/injector/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: vault-mw-injector
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: vault-0.10.2
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/component: injector
webhooks:
  - name: vault.hashicorp.com
    failurePolicy: Ignore
    matchPolicy: Exact
    sideEffects: None
    timeoutSeconds: 30
    admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      service:
        name: vault-injector
        namespace: "mw"
        path: "/mutate"
      caBundle: ""
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    objectSelector:
      matchExpressions:
        - key: app.kubernetes.io/component
          operator: NotIn
          values:
            - injector
