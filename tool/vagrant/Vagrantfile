Vagrant.configure("2") do |config|
    config.trigger.before :up do |trigger|
        trigger.info = "Creating 'NATSwitch' Hyper-V switch if it does not exist..."
    
        trigger.run = {privileged: "true", powershell_elevated_interactive: "true", path: "./scripts/create-nat-hyperv-switch.ps1"}
    end
    
    config.trigger.before :reload do |trigger|
        trigger.info = "Setting Hyper-V switch to 'NATSwitch' to allow for static IP..."
    
        trigger.run = {privileged: "true", powershell_elevated_interactive: "true", path: "./scripts/set-hyperv-switch.ps1"}
    end
    
    # 在vm内执行一个宿主机上的脚本
    config.vm.provision "shell", path: "./scripts/init-vm.sh"
    
    config.vm.provision :reload

    # primary 表示主硬盘
    config.vm.disk :disk, size: "40GB", primary: true

    config.vm.provider "hyperv" do |hv|
        hv.vmname = "k8s1"
        hv.cpus = 4
        hv.memory = 3G
        hv.maxmemory = nil
    end
    config.vm.hostname = "k8s1"
    
    # 定义多个vm
    # config.vm.define "k8s1" do |k8s1|
    #     k8s1.vm.hostname = "k8s1"
    #     k8s1.vm.provider "hyperv" do |hv2|
    #         hv2.vmname = "k8s1"
    #     end
    #     k8s1.vm.cloud_init :user_data do |cloud_init2|
    #         cloud_init2.content_type = "text/cloud-config"
    #         cloud_init2.path = "config1.cfg"
    #     end
    # end

    # config.vm.synced_folder '.', '/vagrant', {
    #   type: 'smb', mount_options: ['vers=3.0'],
    #   smb_username: ENV['VAGRANT_SMB_USERNAME'],
    #   smb_password: ENV['VAGRANT_SMB_PASSWORD']
    # }
    config.vm.box = "generic/ubuntu2204"

    # Simplified form
    config.vm.cloud_init :user_data, content_type: "text/cloud-config", path: "config.cfg"

    # block form 另外一种写法
    # config.vm.cloud_init :user_data do |cloud_init|
    #     cloud_init.content_type = "text/cloud-config"
    #     cloud_init.path = "config.cfg"
    # end

end